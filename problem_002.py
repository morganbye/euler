"""
Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not
exceed four million, find the sum of the even-valued terms.
"""


def get_fibonacci_list(limit):
    """Build a list of Fibonacci numbers.

    Parameters
    ----------
    limit : int
        Upper limit to stop at

    Returns
    -------
    list of int

    """
    if limit == 1:
        return [1]

    n1 = 0
    n2 = 1
    nth = 1

    result = []

    while nth < limit:
        result.append(nth)

        nth = n1 + n2
        n1 = n2
        n2 = nth

    # Remove duplicate 1's at beginning
    result.pop(0)

    return result


def rm_odd_numbers(int_list):
    """Given an input list of numbers remove the odd numbers.

    Parameters
    ----------
    int_list : list of int

    Returns
    -------
    list of int

    """
    output = []

    for item in int_list:
        if not item % 2:
            output.append(item)

    return output

limit = 4000000
fibonacci_list = get_fibonacci_list(limit)
even_fibonaccis = rm_odd_numbers(fibonacci_list)

print(sum(even_fibonaccis))
